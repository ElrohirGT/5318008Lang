{
  "Let Variable": {
    "prefix": "let",
    "body": [
      "let ${1:variableName}${2:: type} = ${3:initialValue};"
    ],
    "description": "Declare a variable using let"
  },
  "Var Variable": {
    "prefix": "var",
    "body": [
      "var ${1:variableName}${2:: type} = ${3:initialValue};"
    ],
    "description": "Declare a variable using var"
  },
  "Const Variable": {
    "prefix": "const",
    "body": [
      "const ${1:constantName}${2:: type} = ${3:value};"
    ],
    "description": "Declare a constant"
  },
  "Function": {
    "prefix": "function",
    "body": [
      "function ${1:functionName}(${2:params})${3:: returnType} {",
      "    ${0:// body}",
      "}"
    ],
    "description": "Declare a function"
  },
  "Class": {
    "prefix": "class",
    "body": [
      "class ${1:ClassName}${2:: BaseClass} {",
      "    ${0:// members}",
      "}"
    ],
    "description": "Declare a class"
  },
  "If Statement": {
    "prefix": "if",
    "body": [
      "if (${1:condition}) {",
      "    ${0:// body}",
      "}"
    ],
    "description": "If statement"
  },
  "If-Else Statement": {
    "prefix": "ifelse",
    "body": [
      "if (${1:condition}) {",
      "    ${2:// body}",
      "} else {",
      "    ${0:// else body}",
      "}"
    ],
    "description": "If-Else statement"
  },
  "While Loop": {
    "prefix": "while",
    "body": [
      "while (${1:condition}) {",
      "    ${0:// body}",
      "}"
    ],
    "description": "While loop"
  },
  "Do-While Loop": {
    "prefix": "dowhile",
    "body": [
      "do {",
      "    ${0:// body}",
      "} while (${1:condition});"
    ],
    "description": "Do-While loop"
  },
  "For Loop": {
    "prefix": "for",
    "body": [
      "for (${1:init}; ${2:condition}; ${3:increment}) {",
      "    ${0:// body}",
      "}"
    ],
    "description": "For loop"
  },
  "Foreach Loop": {
    "prefix": "foreach",
    "body": [
      "foreach (${1:item} in ${2:collection}) {",
      "    ${0:// body}",
      "}"
    ],
    "description": "Foreach loop"
  },
  "Print": {
    "prefix": "print",
    "body": [
      "print(${1:expression});"
    ],
    "description": "Print statement"
  },
  "Return": {
    "prefix": "return",
    "body": [
      "return ${1:expression};"
    ],
    "description": "Return statement"
  }
}
